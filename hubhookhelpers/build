#!/bin/bash
# This script builds the container.
# It adds a fingerprint and revision automatically.
# You can pass extra arguments to the script to pass them to the docker build.
# You can also:
#   * prefix the generated tag by setting PREFIX
#   * auto prefix via rpm version by setting:
#     * AUTO_PREFIX="rpm-version-release" and AUTO_PREFIX_PACKAGE=<rpmname>
#   * auto prefix via apk version by setting:
#     * AUTO_PREFIX="apk-version-release" and AUTO_PREFIX_PACKAGE=<apkname>
#   * NEW_BUILD=<anything> will force a new build reguardless of fingerprints.
#       Used for bottstrapping.
# It needs the following variables set:
#   * IMAGE_NAME - the full image name for the latest build.
#   * DOCKER_TAG - the tag the latest build will get.
#   * DOCKER_REPO - the repo the builds will go into.

set -e

echo "Build hook running"
docker build -t tmp$$:1 . "$@"

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/" && pwd )"
. $DIR/../common.sh

setupjq

if [ "x$PREFIX" == "x" ]; then
        if [ "x$AUTO_PREFIX" == "xrpm-version" ]; then
                PREFIX=$(docker run -i --rm --entrypoint='' tmp$$:1 rpm -q --queryformat '%{Version}' "$AUTO_PREFIX_PACKAGE")
        fi
        if [ "x$AUTO_PREFIX" == "xrpm-version-release" ]; then
                PREFIX=$(docker run -i --rm --entrypoint='' tmp$$:1 rpm -q --queryformat '%{Version}-%{Release}' "$AUTO_PREFIX_PACKAGE")
        fi
        if [ "x$AUTO_PREFIX" == "xapk-version" ]; then
                PREFIX=$(docker run -i --rm --entrypoint='' tmp$$:1 apk info "$AUTO_PREFIX_PACKAGE" 2>/dev/null | head -n 1 | awk '{print $1}')
                PREFIX=${PREFIX#"$AUTO_PREFIX_PACKAGE-"}
                PREFIX=$(echo "$PREFIX" | awk -F- '{print $1}')
        fi
        if [ "x$AUTO_PREFIX" == "xapk-version-release" ]; then
                PREFIX=$(docker run -i --rm --entrypoint='' tmp$$:1 apk info "$AUTO_PREFIX_PACKAGE" 2>/dev/null | head -n 1 | awk '{print $1}')
                PREFIX=${PREFIX#"$AUTO_PREFIX_PACKAGE-"}
        fi
        if [ "x$AUTO_PREFIX" == "xrpmrepo-version" ]; then
                setupxmlstarlet
                PREFIX=$(docker run -i --rm tmp$$:1 /bin/sh -c 'cat /data/repodata/*primary.xml.gz' | zcat -f | xmlstarlet sel -t -m '/_:metadata/_:package[_:name="$AUTO_PREFIX_PACKAGE"]'  -m '_:version' -v '@ver' -n)
        fi
        if [ "x$AUTO_PREFIX" == "xrpmrepo-version-release" ]; then
                setupxmlstarlet
                PREFIX=$(docker run -i --rm tmp$$:1 /bin/sh -c 'cat /data/repodata/*primary.xml.gz' | zcat -f | xmlstarlet sel -t -m '/_:metadata/_:package[_:name="$AUTO_PREFIX_PACKAGE"]'  -m '_:version' -v '@ver' -o '-' -v '@rel' -n)
        fi
	if [ "x$AUTO_PREFIX" != "x" -a "x$PREFIX" == "x" ]; then
		echo "Failed to generate prefix for an unknown reason."
		exit -1
	fi
fi

echo "PREFIX determined to be: $PREFIX"

echo "Adding fingerprint."
hubbuildtools/addfingerprint.sh tmp$$:1 tmp$$:2

# Fails if already uploaded to prevent a new version of the same contents
# from landing.
echo "Checking if this version already exists."
hubbuildtools/hubcompare.sh "$DOCKER_REPO" "$DOCKER_TAG" tmp$$:2

echo "Adding revision."
hubbuildtools/addrevision.sh tmp$$:2 "$DOCKER_REPO" "$DOCKER_TAG" "$IMAGE_NAME" "$PREFIX"

docker rmi tmp$$:1 tmp$$:2
